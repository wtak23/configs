snippet switch
	switch (${1:object},
		${2:case} = ${3:action}
	)
	
snippet dashed_equal
	# ============================================================================ #
	# ${1}
	# ============================================================================ #
	${2}
	
snippet knitr_suppress_message
	#+ warning=FALSE, message=FALSE
	
snippet knitr_top
	---
	title: "Elementary Statistics with R"
	author:
	date:
	output:
		html_document:
			fig_widht: 8
			fig_height: 8
			keep_md: true
			toc: true
			toc_depth: 2
	---
	
snippet knitr_figsize
	#+ fig.width=6, fig.height=2.5

#http://stackoverflow.com/questions/13672720/r-command-for-setting-working-directory-to-source-file-location
snippet setwd_current_file
	this.dir <- dirname(parent.frame(2)$ofile)
	setwd(this.dir)

snippet show_error_line
	options(show.error.locations = TRUE)
	
snippet knitr_show_dataframe
	#+ results = 'asis'
	print(xtable::xtable(head(${1:dataframe-name},n=10)), type='html')
	
snippet knitr_top2
	#' ---
	#' title: "${1:TITLE}"
	#' author: 
	#' date: 
	#' output:
	#'    html_document:
	#'      fig_width: 12
	#'      fig_height: 12
	#'      keep_md: true
	#'      toc: true
	#'      toc_depth: 2
	#' ---
	#'
	#' **About this document**
	#' ${2: About the document}
	#' 
	#'
	#' # ${3:HEADER-1}
	#'
	
	$4

snippet rem
	rm(list = ls())

snippet rm
	rm(list = ls())
	
# --- above i modified --- #
# (below are from default)

snippet lib
	library(${1:package})

snippet req
	require(${1:package})

snippet src
	source("${1:file.R}")

snippet ret
	return(${1:code})

snippet mat
	matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})

snippet sg
	setGeneric("${1:generic}", function(${2:x, ...}) {
		standardGeneric("${1:generic}")
	})

snippet sm
	setMethod("${1:generic}", ${2:class}, function(${2:x, ...}) {
		${0}
	})

snippet sc
	setClass("${1:Class}", slots = c(${2:name = "type"}))

snippet if
	if (${1:condition}) {
		${0}
	}

snippet el
	else {
		${0}
	}

snippet ei
	else if (${1:condition}) {
		${0}
	}

snippet fun
	${1:name} <- function(${2:variables}) {
		${0}
	}

snippet for
	for (${1:variable} in ${2:vector}) {
		${0}
	}

snippet while
	while (${1:condition}) {
		${0}
	}

snippet apply
	apply(${1:array}, ${2:margin}, ${3:...})

snippet lapply
	lapply(${1:list}, ${2:function})

snippet sapply
	sapply(${1:list}, ${2:function})

snippet mapply
	mapply(${1:function}, ${2:...})

snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})

snippet vapply
	vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})

snippet rapply
	rapply(${1:list}, ${2:function})

snippet ts
	`r paste("#", date(), "------------------------------\n")`

